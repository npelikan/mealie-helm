# Default values for mealie.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# strongly recommend using postgres if replicaCount > 1
# TODO: deploy warning
replicaCount: 1

persistence:
  # TODO: set storage mode
  # strongly recommend this be set to true if not using postgres
  enabled: false 
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 25G

mealie:
  # The Base URL of the Mealie service.
  baseUrl: https://mealie.example.com
  # The timezone Mealie should use. Should be in typical timezone name format eg "America/Denver"
  tz: UTC
  postgres: 
    # TODO; add ability to create postgres instance via subchart
    enabled: false # if disabled, defaults to sqlite database (recommended)
    hostname: "postgres.postgres.svc.cluster.local"
    dbname: mealie
    port: 5432
    # name of secret containing postgres authentication information for Mealie. The secret must 
    # contain the keys POSTGRES_USER and POSTGRES_PASSWORD
    secret: ""
  oidc:
    enabled: false
    url: https://auth.example.com/.well-known/openid-configuration # be sure that this is your full configuration url
    userClaim: email # OIDC username claim, eg "email" or "preferred_username"
    # secret containing oidc information for Mealie. The secret must contain the keys OIDC_CLIENT_ID
    #  and OIDC_CLIENT_SECRET
    secret: ""
  openai:
    enabled: false
    # secret containing openai key for mealie. must contain the key OPENAI_API_KEY
    secret: ""
    # TODO: add more openai config options here
  # Use the following block to input any extra configs to mealie. 
  # More information can be found here: https://docs.mealie.io/documentation/getting-started/installation/backend-config/
  extraConfigs: {}
    # PUID: "1000"
    # PGID: "1000"
  
# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/mealie-recipes/mealie
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 9000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  # className: nginx
  # annotations:
  #   cert-manager.io/cluster-issuer: "letsencrypt"
  #   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  # hosts:
  #   - host: mealie.example.com
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: 
  #  - secretName: mealie.example.com-tls
  #    hosts:
  #      - mealie.example.com

resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
